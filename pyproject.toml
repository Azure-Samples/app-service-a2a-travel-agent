[project]
name = "semantic-kernel-travel-agent"
version = "1.0.0"
description = "Production-ready Semantic Kernel A2A Travel Agent with Web UI"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Azure Developer", email = "developer@example.com"}
]
keywords = ["semantic-kernel", "a2a", "travel", "ai", "agent", "fastapi", "azure"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    "pydantic>=2.10.6",
    "httpx>=0.28.1",
    "httpx-sse>=0.4.0",
    "semantic-kernel>=1.30.0",
    "a2a-sdk[sqlite]>=0.2.9",
    "sqlalchemy>=2.0.41",
    "aiosqlite>=0.21.0",
    "jwcrypto>=1.5.6",
    "pyjwt>=2.10.1",
    "sse-starlette>=2.2.1",
    "starlette>=0.46.1",
    "typing-extensions>=4.12.2",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
    "aiofiles>=23.2.1"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[dependency-groups]
dev = [
    "pytest>=8.3.5", 
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.14.0", 
    "ruff>=0.11.2",
    "mypy>=1.8.0",
    "types-aiofiles>=23.2.0"
]

[tool.ruff]
line-length = 120
target-version = "py310"
extend-exclude = ["migrations", "build", "dist"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "C901",  # Too complex
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "a2a.*",
    "semantic_kernel.*",
    "httpx_sse.*",
]
ignore_missing_imports = true
